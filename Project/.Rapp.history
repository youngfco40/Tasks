Data <-read.csv('beren_new.csv')
setwd('~Desktop/Evoultion/Tasks/Task_02')
Data <-read.csv('beren_new.csv')
Data <-read.csv('beren_new.csv', stringsAsFactors = F)
read.csv('beren_new.csv', stringsAsFactors = F)
read.csv('beren_new.csv')
libarary(pkg)
library(pkg)
trueMean1 <- 5
trueSD1 <- 5
population1 <- rnorm(1e6, trueMean1, trueSD1)
trueMean2 <- 4
trueSD2 <- 5
population2 <- rnorm(1e6, trueMean2, trueSD2)
Size <- 50
Sample1 <- sample(population, Size)
Sample1 <- sample(population1, Size)
Sample2 <- sample(population2, Size)
boxplot(Sample1, Sample2)
source("http://jonsmitchell.com/code/simFxn04.R")
source("/Users/jennayoung/Desktop/Evolution/Tasks/Task_02/Task3.R")
install.packages("learnPopGen")
library(learnPopGen)
x <-gentic.drift(Ne =200, nrep =5, pause= 0.01)
x <-genetic.drift(Ne =200, nrep =5, pause= 0.01)
head(x)
x <-genetic.drift(Ne =300, nrep =5, pause= 0.01)
head(x)
x <-genetic.drift(Ne =100, nrep =5, pause= 0.01)
head(x)
PopSizes <- 5:50
Samples <- rep(PopSizes, 5)
tExt <- sapply(Samples, function(x) nrow(simPop(x, 500)))
Line <- lm(tExt ~ Samples)
summary(Line)
Line$coef
plot(Samples, tExt)
abline(Line)
Line2 <- lm(tExt ~Samples + 0)
plot(Samples, tExt)
abline(Line)
albine(Line2)
plot(Samples, tExt)
abline(Line)
albine(Line2)
plot(Samples, tExt)
albine(Line2)
abline(Line)
albine(Line2)
plot(Samples, tExt)
albine(Line2)
abline(Line)
abline(Line2)
plot(Samples, tExt)
abline(Line2)
plot(Samples, tExt)
abline(Line)
source("http://jonsmitchell.com/code/fxn05.R")
Pop1 <- simPop(Popsize = 50, nGenerations = 100, initial_p = 0.5, h= 1, s = 0)
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0,1), type = "1", xlab = "generation", ylab +"allele freq", lwd =2)
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0,1), type = "1", xlab = "generation", ylab = "allele freq", lwd =2)
lines(1:nrow(Pop1), Pop1[,2], lwd =2, col = 'red')
legend("topleft", legend = c("a", "b"), col = c("black", "red"), lwd = 2, bty = "n")
plotFit (nruns = 10, n =50, ngens =100, init_p =0.5, h =1, s =0)
Expectation <- c(10,10,10,10)
Observed <- c(15, 15, 5, 5)
Chisq <- sum (((Expectation-Observed)^2)/Expectation)
barplot(rbind(Expectation,Observed), beside =T, main = bquote(Chi^2 ~ "=" ~. (Chisq)), legend.txt = c("expected, observed"))
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0,1), type = "l", xlab = "generation", ylab = "allele freq", lwd =2)
lines(1:nrow(Pop1), Pop1[,2], lwd =2, col = 'red')
legend("topleft", legend = c("a", "b"), col = c("black", "red"), lwd = 2, bty = "n")
plotFit (nruns = 10, n =50, ngens =100, init_p =0.5, h =1, s =0)
Expectation <- c(10,10,10,10)
Observed <- c(15, 15, 5, 5)
Chisq <- sum (((Expectation-Observed)^2)/Expectation)
barplot(rbind(Expectation,Observed), beside =T, main = bquote(chi^2 ~ "=" ~. (Chisq)), legend.txt = c("expected, observed"))
barplot(rbind(Expectation,Observed), beside =T, main = bquote(chi^2 ~ "=" ~. (Chisq)), legend.text = c("expected, observed"))
results <- read.csv("http://jonsmitchell.com/data/biol112labresults.csv", stringAsFactors=F)
counts <- results[,c("yellow", "red", "green", "blue", "black", "tan")]
results <- read.csv("http://jonsmitchell.com/data/biol112labresults.csv", stringAsFactors=FALSE)
results <− read.csv(”http://jonsmitchell.com/data/biol112labresults.csv ” , stringsAsFactors=F)
results <- read.csv("http://jonsmitchell.com/data/biol112labresults.csv", stringsAsFactors=F)
counts <- results[,c("yellow", "red", "green", "blue", "black", "tan")]
backgrounds <- c("White", "Red", "Yellow", "Green", "Blue", "Black")
backgroundCol <- c("white", "#d53e4f", "#fee08b", "#abdda4", "#3288bd", "black")
calcChi(counts[1,])
Chisqs <- apply(counts, 1, calcChi)
plotChis(counts)
Avg <- mean(Chisqs)
head(Avg)
backgroundAvgs <-tapply(Chisqs, results[,3], mean)
head(backgroundAvgs)
propSig<-length(which(Chisqs>11.70)/length(Chisqs)
percSig <- round(100* propSig)
propSig<-length(which(Chisqs>11.70)/length(Chisqs)
percSig <- round(100 * propSig)
propSig<-length(which(Chisqs>11.70))/length(Chisqs)
percSig <- round(100 * propSig)
head(propSig)
head(percSig)
par(las = 1, mar = c(4,4,1,1), mgp = c(2, 05, 0), tck = -0.01. cex.axis =1)
par(las = 1, mar = c(4,4,1,1), mgp = c(2, 05, 0), tck = -0.01, cex.axis =1)
hist(Chisqs, main = "", xlab = "chi-squared values", ylab = "frequency")
par(las =1, mar = c(4,4,1,1), mgp = c(2, 0.5,0), tck = -0.01, cex.axis = 1)
plot(1,1, xlim = c(0,400), ylim = c(1, 8.5), xlab = "", ylab ="", type = "n", yaxt = "n")
axis(2, at =1:length(backgrounds), labels = backgrounds)
mtext(side =1, expression(chi^2), cex =1.75, line =2.5)
counter <-1
for(i in backgrounds) {#
	Data <-Chisqs[which(results[,3] == i)]#
	addHist(Y=counter, Dat=Data, Color = backgroundCol[counter])#
	counter <- counter +1#
	}
abline (v = 11.70, lty =2, lwd =2, col = 'black')
Simulation <- simDraws(10000)
addHist(Y=7, Dat = Simulation, Color="lightgray")
mtext(side =2, at =7, line =0, "simulated")
abline(v= 11.70, lty =2, lwd =2)
Fit <- c(1,1,1,1,1,1)
names(Fit) <- 1:6
Simulation2 <- simDraws(1e4, w = Fit)
addHist(Y=8, Dat = Simulation2, Color=rgb(0,0,0,0.25))
Fit <- c(0.1, 1, 1, 1, 1, 1)
names(Fit) <- 1:6
Simulation3 <- simDraws(1e4, w = Fit)
addHist(Y=8, Dat=Simulation3, Color=rgb(0,0,0,0.25))
Fit <- c(0.5, 0.6, 0.7, 1, 1, 1)
names(Fit) <- 1:6
Simluation4 <- simDraws(1e4, w = Fit)
addHist(Y=8, Dat=Simulation4, Color=rgb(0,0,0,0.25))
Simulation4 <- simDraws(1e4, w = Fit)
addHist(Y=8, Dat=Simulation4, Color=rgb(0,0,0,0.25))
Fit <- c(0.1, 0.2, 0.3, 0.4, 0.5, 1)
names(Fit) <- 1:6
Simulation5 <- simDraws(1e4, w = Fit)
addHist(Y=8, Dat=Simulation5, Color=rgb(0,0,0,0.25))
Fit <- c(0.1, 0.1, 0.1, 0.1, 0.1, 1)
names(Fit) <- 1:6
Simulation6 <- simsDraws(1e4, w = Fit)
Simulation6 <- simDraws(1e4, w = Fit)
addHist(Y=8, Dat=Simulation6, Color=rgb(0,0,0,0.25))
mtext(side =2, 1t =8, line =0, "sel. sim")
mtext(side =2, at =8, line =0, "sel. sim")
Simulation7 <- c(Simulation2, Simulation3, Simulation4, Simulation5, Simulation6)
addHist(Y=8, Dat=Simulation7, Colorrgb(0,0,1,0.25))
addHist(Y=8, Dat=Simulation7, Color=rgb(0,0,1,0.25))
source("/Users/jennayoung/Desktop/Evolution/Tasks/Task_04/Task04.R")
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0,1), type = "l", xlab = "generation", ylab = "allele freq", lwd =2)
lines(1:nrow(Pop1), Pop1[,2], lwd =2, col = 'red')
legend("topleft", legend = c("a", "b"), col = c("black", "red"), lwd = 2, bty = "n")
plotFit (nruns = 10, n =50, ngens =100, init_p =0.5, h =1, s =0)
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0,1), type = "l", xlab = "generation", ylab = "allele freq", lwd =2)
lines(1:nrow(Pop1), Pop1[,2], lwd =2, col = 'red')
legend("topleft", legend = c("a", "b"), col = c("black", "red"), lwd = 2, bty = "n")
plotFit (nruns = 10, n =50, ngens =100, init_p =0.5, h =1, s =0)
plotChis(counts)
par(las = 1, mar = c(4,4,1,1), mgp = c(2, 05, 0), tck = -0.01, cex.axis =1)
hist(Chisqs, main = "", xlab = "chi-squared values", ylab = "frequency")
par(las =1, mar = c(4,4,1,1), mgp = c(2, 0.5,0), tck = -0.01, cex.axis = 1)
plot(1,1, xlim = c(0,400), ylim = c(1, 8.5), xlab = "", ylab ="", type = "n", yaxt = "n")
axis(2, at =1:length(backgrounds), labels = backgrounds)
mtext(side =1, expression(chi^2), cex =1.75, line =2.5)
counter <-1#
for(i in backgrounds) {#
	Data <-Chisqs[which(results[,3] == i)]#
	addHist(Y=counter, Dat=Data, Color = backgroundCol[counter])#
	counter <- counter +1#
	}
abline (v = 11.70, lty =2, lwd =2, col = 'black')
Simulation <- simDraws(10000)#
addHist(Y=7, Dat = Simulation, Color="lightgray")#
mtext(side =2, at =7, line =0, "simulated")#
abline(v= 11.70, lty =2, lwd =2)#
#
Fit <- c(1,1,1,1,1,1)#
names(Fit) <- 1:6#
Simulation2 <- simDraws(1e4, w = Fit)#
addHist(Y=8, Dat = Simulation2, Color=rgb(0,0,0,0.25))#
#
Fit <- c(0.1, 1, 1, 1, 1, 1)#
names(Fit) <- 1:6#
Simulation3 <- simDraws(1e4, w = Fit)#
addHist(Y=8, Dat=Simulation3, Color=rgb(0,0,0,0.25))#
#
Fit <- c(0.5, 0.6, 0.7, 1, 1, 1)#
names(Fit) <- 1:6#
Simulation4 <- simDraws(1e4, w = Fit)#
addHist(Y=8, Dat=Simulation4, Color=rgb(0,0,0,0.25))#
#
Fit <- c(0.1, 0.2, 0.3, 0.4, 0.5, 1)#
names(Fit) <- 1:6#
Simulation5 <- simDraws(1e4, w = Fit)#
addHist(Y=8, Dat=Simulation5, Color=rgb(0,0,0,0.25))#
#
Fit <- c(0.1, 0.1, 0.1, 0.1, 0.1, 1)#
names(Fit) <- 1:6#
Simulation6 <- simDraws(1e4, w = Fit)#
addHist(Y=8, Dat=Simulation6, Color=rgb(0,0,0,0.25))#
mtext(side =2, at =8, line =0, "sel. sim")#
#
Simulation7 <- c(Simulation2, Simulation3, Simulation4, Simulation5, Simulation6)#
addHist(Y=8, Dat=Simulation7, Color=rgb(0,0,1,0.25))
par(las = 1, mar = c(4,4,1,1), mgp = c(2, 05, 0), tck = -0.01, cex.axis =1)#
hist(Chisqs, main = "", xlab = "chi-squared values", ylab = "frequency")#
par(las =1, mar = c(4,4,1,1), mgp = c(2, 0.5,0), tck = -0.01, cex.axis = 1)#
plot(1,1, xlim = c(0,400), ylim = c(1, 8.5), xlab = "", ylab ="", type = "n", yaxt = "n")#
#
axis(2, at =1:length(backgrounds), labels = backgrounds)#
mtext(side =1, expression(chi^2), cex =1.75, line =2.5)#
#
counter <-1#
for(i in backgrounds) {#
	Data <-Chisqs[which(results[,3] == i)]#
	addHist(Y=counter, Dat=Data, Color = backgroundCol[counter])#
	counter <- counter +1#
	}#
abline (v = 11.70, lty =2, lwd =2, col = 'black')#
#
Simulation <- simDraws(10000)#
addHist(Y=7, Dat = Simulation, Color="lightgray")#
mtext(side =2, at =7, line =0, "simulated")#
abline(v= 11.70, lty =2, lwd =2)#
#
Fit <- c(1,1,1,1,1,1)#
names(Fit) <- 1:6#
Simulation2 <- simDraws(1e4, w = Fit)#
addHist(Y=8, Dat = Simulation2, Color=rgb(0,0,0,0.25))#
#
Fit <- c(0.1, 1, 1, 1, 1, 1)#
names(Fit) <- 1:6#
Simulation3 <- simDraws(1e4, w = Fit)#
addHist(Y=8, Dat=Simulation3, Color=rgb(0,0,0,0.25))#
#
Fit <- c(0.5, 0.6, 0.7, 1, 1, 1)#
names(Fit) <- 1:6#
Simulation4 <- simDraws(1e4, w = Fit)#
addHist(Y=8, Dat=Simulation4, Color=rgb(0,0,0,0.25))#
#
Fit <- c(0.1, 0.2, 0.3, 0.4, 0.5, 1)#
names(Fit) <- 1:6#
Simulation5 <- simDraws(1e4, w = Fit)#
addHist(Y=8, Dat=Simulation5, Color=rgb(0,0,0,0.25))#
#
Fit <- c(0.1, 0.1, 0.1, 0.1, 0.1, 1)#
names(Fit) <- 1:6#
Simulation6 <- simDraws(1e4, w = Fit)#
addHist(Y=8, Dat=Simulation6, Color=rgb(0,0,0,0.25))#
mtext(side =2, at =8, line =0, "sel. sim")#
#
Simulation7 <- c(Simulation2, Simulation3, Simulation4, Simulation5, Simulation6)#
addHist(Y=8, Dat=Simulation7, Color=rgb(0,0,1,0.25))
install.packages(learnPopGen)
install.packages('learnPopGen')
install.packages('coala')
library(coala)
library(phytools)
model <- coal_model(sample_size = 5, loci_number = 10, loci_length = 500, ploidy =2) + feat_mutation(10) + feat_recombination(10) + sumstat_trees() + sumstat_nucleotide_div()
stats <- simulate(model, nsim = 1)
Diversity <- stats$pi
install.packages("learnPopGen")
install.packages("coala")
library(coala)
library(phytools)
model <- coal_model(sample_size = 5, loci_number = 10, loci_length = 500, ploidy =2) + feat_mutation(10) + feat_recombination(10) + sumstat_trees() + sumstat_nucleotide_div()
stats <- simulate(model, nsim = 1)
Diversity <- stats$pi
Nloci <- length(stats$trees)
t1 <- read.tree(text=stats$trees[[1][1]])
t1 <- read.tree(text=stats$trees[[1]][1])
plot(t1)
axisPhylo()
Agel <- max(nodeHeights(t1))
t2 <- read.tree(text=stats$trees[[2]][1])
plot(t2)
axisPhylo()
compare.chronograms(t1, t2)
t1_1 <- read.tree(text=stats$trees[[1]][1])
t1_2 <- read.tree(text=stats$trees[[1]][2])
coalescent.plot?
coalescent?
par(mfrow=c(1,2))
plot(t1)
axisPhylo()
plot(t2)
axisPhylo()
compare.chronograms(t1,t2)
set('~/Desktop/Evolution/Project')
setwd('~/Desktop/Evolution/Project')
ProjectData <- read.csv('Datasets_for_dryads.csv')
ProjectData <- read.csv('Datasets_for_dryads.csv', stringsAsFactors = F)
ProjectData <- read.csv('Datasets_for_dryad.csv', stringsAsFactors = F)
head(ProjectData)
setwd('~/Desktop/Evolution/Project')
ProjectData <- read.csv('Datasets_for_dryad.csv', stringsAsFactors = F)
print(ProjectData)
head(ProjectData, 100)
ProjectData <- read.csv('Datasets_for_dryad.csv', stringsAsFactors = F)
head(ProjectData, 100)
ProjectData <- read.csv('Datasetforproject.csv', stringsAsFactors = F)
head(ProjectData, 100)
