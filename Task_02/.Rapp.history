setwd('~/Desktop/Evolution/Tasks/Task_02')#
Data <- read.csv('http://jonsmitchell.com/data/beren.csv', stringsAsFactors = F)#
write.csv(Data, 'rawdata.csv', quote = F)#
length(Data)#
nrow(Data)#
ncol(Data)#
colnames(Data)#
head(Data)#
Data[1,]#
Data[2,]#
Data[1:3,]#
Data[1:3, 4]#
Data[1:5, 1:3]#
#
Feeds <- which(Data[,9] == 'bottle')#
berenMilk <- Data[Feeds,]#
head(berenMilk)#
Feeds <- which(Data[, 'event'] == 'bottle')#
berenMilk <- Data[Feeds,]#
head(berenMilk)#
Feeds <- which(Data$event == 'bottle')#
berenMilk2 <- Data[Feeds,]#
head(berenMilk2)#
dayID <- apply(Data, 1, function(x) paste(x[1:3], collapse = '-'))#
dateID <- sapply(dayID, as.Date, format = "%Y-%m-%d", origin = "2019-04-18")#
Data$age <- dateID - dateID[which(Data$event == 'birth')]#
head(Data)#
beren2 <- Data#
beren3 <- beren2[order(beren2$age) ,]#
head(beren2)#
head(beren3)#
write.csv(beren3, 'beren_new.csv' , quote = F, row.names = FALSE)
totalFeed2 <- tapply(beren3$value[Feeds], beren3$age[Feeds], sum)
Month <-which(beren3$event == "month")
Months <- month(beren$month)
totalFeed2 <- tapply(beren3$value[Feeds], sum)
avgFeed2 <- sum(beren3$value[Feeds])
varMonth <- tapply(beren3$value[Feeds], beren3$month, var)
avgFeed2 <- sum(berenMilk$value[Feeds])
Month <- which(berenMilk$event == "month")
head(month)
head(Month)
getMonth <- Data[Month,]
head(getMonth)
Month <- which(Data$event == "month")
getMonth <- Data[Month,]
head(getMonth)
Month <- which(Data$event == 'month')
getMonth <- Data[Month,]
head(getMonth)
Month <- which(Data$month == '4')
getMonth <- Data[Month,]
head(getMonth)
month2 <- which(Data$month == '10')
berenMonth <- Data
head(avgFeed2)
head(getMonth)
getMonth <- Data[Month,]
head(getMonth)
head(avgFeed2)
Feeds <- which(Data$event == 'bottle')
berenMilk <- Data[Feeds]
berenMilk <- Data[Feeds,]
head(berenMilk)
avgFeed2 <- sum(berenMilk$value[Feeds])
Month <- which(Data$month == '10')
getMonth <- Data[Month,]
head(getMonth)
?plot
?albine
?par
unique(beren3$event)
setwd('~Desktop/Evolution/Tasks/Task_02')
Data <- read.csv('http://jonsmitchell.com/data/beren.csv', stringsAsFactors = F)
read.csv('beren_new.csv')
weight <-which(Data$event == 'trait_mass')
dayID <- apply(Data,1, function(x) paste (x[1:3], collapse = '='))
dateID <- sapply(dayID, as.Date, format = "%Y-%m-%d", origin = "2019-04-18")
Data$age <- dateID - date ID[which(Data$event == 'birth')]
Data$age <- dateID - dateID[which(Data$event == 'birth')]
beren2 <-Data
beren3 <-beren2[order(beren2$age) ,]
numWeight <- tapply(beren3$value[weight], beren3$age[weight], length)
totalWeight <-tapply(beren3$value[weight], beren3$age[Feeds], sum)
totalWeight <-tapply(beren3$value[weight], beren3$age[weight], sum)
plot(as.numeric(names(totalWeight)), totalWeight, type "b", pch = 16, xlab "age in days", ylab = "weight in kg")
plot(as.numeric(names(totalWeight)), totalWeight, type = "b", pch = 16, xlab "age in days", ylab = "weight in kg")
plot(as.numeric(names(totalWeight)), totalWeight, type = "b", pch = 16, xlab = "age in days", ylab = "weight in kg")
par(las =1, mar= c(5,5,1,1), mpg = c(2,0.5,0), tck = -0.01)
plot(as.numeric(names(totalWeight)), totalWeight, type = "b", pch = 16, xlab = "age in days", ylab = "weight in kg")
par(las =1, mar= c(5,5,1,1), mgp = c(2,0.5,0), tck = -0.01)
plot(as.numeric(names(totalWeight)), totalWeight, type = "b", pch = 16, xlab = "age in days", ylab = "weight in kg")
plot(as.numeric(names(totalWeight)), totalWeight, type = "l", pch = 16, xlab = "age in days", ylab = "weight in kg")
head(weight)
plot(as.numeric(names(totalWeight)), totalWeight, type = "l", pch = 5, xlab = "age in days", ylab = "weight in kg")
head(beren3)
head(Data)
Data <-read.csv('beren_new.csv')
weight <-which(Data$event == 'trait_mass')
head(weight)
dayID <- apply(Data,1, function(x) paste (x[1:3], collapse = '='))
dateID <- sapply(dayID, as.Date, format = "%Y-%m-%d", origin = "2019-04-18")
Data$age <- dateID - dateID[which(Data$event == 'birth')]
beren2 <-Data
beren3 <-beren2[order(beren2$age) ,]
head(Data)
numWeight <- tapply(beren3$value[weight], beren3$age[weight], length)
totalWeight <-tapply(beren3$value[weight], beren3$age[weight], sum)
par(las =1, mar= c(5,5,1,1), mgp = c(2,0.5,0), tck = -0.01)
plot(as.numeric(names(totalWeight)), totalWeight, type = "l", pch = 5, xlab = "age in days", ylab = "weight in kg")
Data <- read.csv('beren_new.csv')
head(Data)
weight <-which(Data$event == 'trait_mass')
head(weight)
dayID <- apply(Data,1, function(x) paste (x[1:3], collapse = '='))
dateID <- sapply(dayID, as.Date, format = "%Y-%m-%d", origin = "2019-04-18")
Data$age <- dateID - dateID[which(Data$event == 'birth')]
beren2 <-Data
beren3 <-beren2[order(beren2$age) ,]
head(Data)
Data <- read.csv('beren_new.csv')
head(Data)
weight <-which(Data$event == 'trait_mass')
dayID <- apply(Data,1, function(x) paste (x[1:3], collapse = '='))
dateID <- sapply(dayID, as.Date, format = "%Y-%m-%d", origin = "2019-04-18")
Data$age <- dateID - dateID[which(Data$event == 'birth')]
head(Data$age)
Data$age <- dateID - dateID[which(Data$event == 'age')]
Data$age <- dateID - dateID[which(Data$event == 'trait_mass')]
head(Data)
Data <- read.csv('beren_new.csv')
head(Data)
Data <- read.csv('beren_new.csv', nrows = 18)
head(Data)
weight <-which(Data$event == 'trait_mass')
head(weight)
beren2 <-Data
beren3 <-beren2[order(beren2$age) ,]
head(Data)
numWeight <- tapply(beren3$value[weight], beren3$age[weight], length)
totalWeight <-tapply(beren3$value[weight], beren3$age[weight], sum)
plot(as.numeric(names(totalWeight)), totalWeight, type = "l", pch = 5, xlab = "age in days", ylab = "weight in kg")
?plot
plot(as.numeric(names(totalWeight)), totalWeight, type = "l", main = "weight over time", pch = 5, xlab = "age in days", ylab = "weight in kg")
pdf("weightovertime.pdf", height = 5, width =5)
plot(as.numeric(names(totalWeight)), totalWeight, type = "l", main = "weight over time", pch = 5, xlab = "age in days", ylab = "weight in kg")
dev.off()
source("/Users/jennayoung/Desktop/Evolution/Tasks/Task_02/Task3.R")
source("http://jonsmitchell.com/code/simFxn04.R")
?source
MatGrandma <- makeFounder("grandma_mom")
MatGrandpa <_ makeFounder("grandpa_mom")
MatGrandpa <- makeFounder("grandpa_mom")
PatGrandma <- makeFounder("grandma_da")
PatGrandpa <- makeFounder("grandpa_da")
Alan <- makeBaby(PatGrandma, PatGrandpa)
Brenda <- makeBaby(MatGrandma, MatGrandpa)
Focus <- makeBaby(Brenda, Alan)
ToMom <- length(grep("mom", Focus))/length(Focus)
ToMomMom <-length(grep("grandma_mom", Focus))/length(Focus)
ToMomDad <-length(grep("grandpa_mom", Focus))/length(Focus)
Sibling_01 <- makeBaby(Brenda, Alan)
ToSib <-length(intersect(Focus, Sibling_01))/length(Focus)
?grep
ManySiblings <- replicate(1e3,length(intersect(Focus, makeBaby(Brenda, Alan)))/length(Focus))
quantile(ManySiblings)
mean(ManySiblings)
plot(dnesity(ManySiblings), main = "", xlab = "proportion shared genes")
plot(density(ManySiblings), main = "", xlab = "proportion shared genes")
HWE <- function(p) {
HWE <- function(p) {#
	aa <- p^2#
	ab <- 2 * p * (1-p)#
	bb <- (1-p)^2#
	return(c(aa=aa), ab=ab, bb=bb)#
}
HWE(0.5)
plot(1,1, type = "n", xlim = c(0,1), ylim=c(0,1), xlab = "freq.allele a", ylab = "geno.freq")
p <- seq(from = 0, to = 1, by = 0.01)
GenoFreq <- t(sapply(p, HWE))
lines(p, GenoFreq[,"aa"], lwd = 2, col = "red")
plot(1,1, type = "n", xlim = c(0,1), ylim=c(0,1), xlab = "freq.allele a", ylab = "geno.freq")
source("/Users/jennayoung/Desktop/Evolution/Tasks/Task_02/Task3.R")
plot(1,1, type = "n", xlim = c(0,1), ylim=c(0,1), xlab = "freq.allele a", ylab = "geno.freq")
trueMean1 <- 5#
trueSD1 <- 5#
population1 <- rnorm(1e6, trueMean1, trueSD1)#
#
trueMean2 <- 4#
trueSD2 <- 5#
population2 <- rnorm(1e6, trueMean2, trueSD2)#
#
Size <- 50#
Sample1 <- sample(population1, Size)#
Sample2 <- sample(population2, Size)#
#
boxplot(Sample1, Sample2)#
#
MatGrandma <- makeFounder("grandma_mom")#
MatGrandpa <- makeFounder("grandpa_mom")#
PatGrandma <- makeFounder("grandma_da")#
PatGrandpa <- makeFounder("grandpa_da")#
#
Alan <- makeBaby(PatGrandma, PatGrandpa)#
Brenda <- makeBaby(MatGrandma, MatGrandpa)#
#
Focus <- makeBaby(Brenda, Alan)#
#
ToMom <- length(grep("mom", Focus))/length(Focus)#
#
ToMomMom <-length(grep("grandma_mom", Focus))/length(Focus)#
ToMomDad <-length(grep("grandpa_mom", Focus))/length(Focus)#
#
Sibling_01 <- makeBaby(Brenda, Alan)#
ToSib <-length(intersect(Focus, Sibling_01))/length(Focus)#
#
ManySiblings <- replicate(1e3,length(intersect(Focus, makeBaby(Brenda, Alan)))/length(Focus))#
quantile(ManySiblings)#
mean(ManySiblings)#
plot(density(ManySiblings), main = "", xlab = "proportion shared genes")#
HWE <- function(p) {#
	aa <- p^2#
	ab <- 2 * p * (1-p)#
	bb <- (1-p)^2#
	return(c(aa=aa), ab=ab, bb=bb)#
}#
HWE(0.5)#
#
plot(1,1, type = "n", xlim = c(0,1), ylim=c(0,1), xlab = "freq.allele a", ylab = "geno.freq")#
#
p <- seq(from = 0, to = 1, by = 0.01)#
GenoFreq <- t(sapply(p, HWE))#
#
lines(p, GenoFreq[,"aa"], lwd = 2, col = "red")
source("http://jonsmitchell.com/code/simFxn04.R")
trueMean1 <- 5#
trueSD1 <- 5#
population1 <- rnorm(1e6, trueMean1, trueSD1)#
#
trueMean2 <- 4#
trueSD2 <- 5#
population2 <- rnorm(1e6, trueMean2, trueSD2)#
#
Size <- 50#
Sample1 <- sample(population1, Size)#
Sample2 <- sample(population2, Size)#
#
boxplot(Sample1, Sample2)
source("http://jonsmitchell.com/code/simFxn04.R")#
#
MatGrandma <- makeFounder("grandma_mom")#
MatGrandpa <- makeFounder("grandpa_mom")#
PatGrandma <- makeFounder("grandma_da")#
PatGrandpa <- makeFounder("grandpa_da")#
#
Alan <- makeBaby(PatGrandma, PatGrandpa)#
Brenda <- makeBaby(MatGrandma, MatGrandpa)#
#
Focus <- makeBaby(Brenda, Alan)#
#
ToMom <- length(grep("mom", Focus))/length(Focus)#
#
ToMomMom <-length(grep("grandma_mom", Focus))/length(Focus)#
ToMomDad <-length(grep("grandpa_mom", Focus))/length(Focus)#
#
Sibling_01 <- makeBaby(Brenda, Alan)#
ToSib <-length(intersect(Focus, Sibling_01))/length(Focus)#
#
ManySiblings <- replicate(1e3,length(intersect(Focus, makeBaby(Brenda, Alan)))/length(Focus))#
quantile(ManySiblings)#
mean(ManySiblings)#
plot(density(ManySiblings), main = "", xlab = "proportion shared genes")#
HWE <- function(p) {#
	aa <- p^2#
	ab <- 2 * p * (1-p)#
	bb <- (1-p)^2#
	return(c(aa=aa), ab=ab, bb=bb)#
}#
HWE(0.5)#
#
plot(1,1, type = "n", xlim = c(0,1), ylim=c(0,1), xlab = "freq.allele a", ylab = "geno.freq")#
#
p <- seq(from = 0, to = 1, by = 0.01)#
GenoFreq <- t(sapply(p, HWE))#
#
lines(p, GenoFreq[,"aa"], lwd = 2, col = "red")
HWE <- function(p) {#
	aa <- p^2#
	ab <- 2 * p * (1-p)#
	bb <- (1-p)^2#
	return(c(aa=aa, ab=ab, bb=bb))#
}#
HWE(0.5)#
#
plot(1,1, type = "n", xlim = c(0,1), ylim=c(0,1), xlab = "freq.allele a", ylab = "geno.freq")#
#
p <- seq(from = 0, to = 1, by = 0.01)#
GenoFreq <- t(sapply(p, HWE))#
#
lines(p, GenoFreq[,"aa"], lwd = 2, col = "red")
lines(p, GenoFreq[,"ab"], lwd=2, col = "purple")
lines(p, GenoFreq[, "bb"], lwd=2, col = "blue")
legend("top", legend=c("aa", "ab", "bb"), col=c("red", "purple", "blue"), ;ty=1, lwd=2, bty="n")
legend("top", legend=c("aa", "ab", "bb"), col=c("red", "purple", "blue"), lty=1, lwd=2, bty="n")
Pop <- simPop(500)
points(Pop[,"freqa"], Pop[,"Genotypes.aa"]/500, pch=21, bg="red")
Pop <-simPop(50)
points(Pop[,"freqa"], Pop[,"Genotypes.aa"]/50, pch=22, bg="red")
head(Sample1)
head(Sample2)
boxplot(Sample1, Sample2)
head(ToMom)
head(ToMomMom)
head(ToMomDad)
head(ToSib)
head(ManySiblings)
source("/Users/jennayoung/Desktop/Evolution/Tasks/Task_02/Task3.R")
install.packages(learnPopGen)
install.packages("learnPopGen")
library(learnPopGen)
